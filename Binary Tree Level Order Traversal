/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
    
        if (root == null) {
            return res;
        } 
        
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.offer(root);
        int count = 0;
        
        while (!queue.isEmpty()) {
            temp = new ArrayList<Integer>();
            res.add(temp);
            count = queue.size();
            
            while (count > 0) {
                TreeNode node = queue.poll();
                temp.add(node.val);
            
                if (node.left != null) {
                    queue.offer(node.left);
                }
            
                if (node.right != null) {
                    queue.offer(node.right);
                }
                count--;
            }
        }
        
        return res;
    }
}
